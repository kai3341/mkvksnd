#!/bin/bash

#https://github.com/kai3341/mkvksnd

function depcheck {
	for DEP in ffmpeg base64
	do
		[ -z "$(which "$DEP")" ] && (echo "Error: $DEP not found. Please install $DEP and try again." && FAIL="1")
	done
	[ -n "$FAIL" ] && exit 1
}

function printhelp {
	echo "USAGE: $(basename $0) -d /path/to/directory -o /out/file/name.vksnd"
	echo "Default directory './'; default outputfile 'out.vksnd'"
	echo "In the directory should contain files \"msg\" \"new\" \"on\" in any format supported by ffmpeg"
	exit 1
}

function argcheck {
	[ -z "$DIRPATH" ] && DIRPATH="./"
	[ -z "$OUTPUTFILE" ] && OUTPUTFILE="out.vksnd"
	[ -d "$DIRPATH" ] || (echo "Error: directory $DIRPATH not exist." && printhelp)
}

function argparse {
	while [[ $# > 1 ]]
	do
		key="$1"
		shift

		case $key in
			-d|--dir)
				DIRPATH="$1"
				shift
			;;
			-o|--out)
				OUTPUTFILE="$(echo $1|sed 's/\.vksnd$//g;s/$/.vksnd/g')"
				shift
			;;
			*)
				printhelp
			;;
		esac
	done
}

function Msg {
	MSGFILES="$(ls -1|grep -i ^msg)"
	MSGFILE="$(ls -1|grep -i ^msg|head -n1)"
	[ -z "$MSGFILES" ] && (echo "Error: file \"msg\" not found." && printhelp)
	MSGFILEWAV="$(ls -1|grep -i ^msg|grep -i wav|head -n1)"
	MSGFILEMP3="$(ls -1|grep -i ^msg|grep -i mp3|head -n1)"
	if [ -z "$MSGFILEWAV" ]
	then
		ffmpeg -i "$MSGFILE" msg.wav
		BASE64MSGWAV="$(base64 msg.wav|tr -d '\n')"
	else
		BASE64MSGWAV="$(base64 "$MSGFILEWAV"|tr -d '\n')"
	fi

	if [ -z "$MSGFILEMP3" ]
	then
		ffmpeg -i "$MSGFILE" msg.mp3
		BASE64MSGMP3="$(base64 msg.mp3|tr -d '\n')"
	else
		BASE64MSGMP3="$(base64 "$MSGFILEMP3"|tr -d '\n')"
	fi
}

function New {
	NEWFILES="$(ls -1|grep -i ^new)"
	NEWFILE="$(ls -1|grep -i ^new|head -n1)"
	[ -z "$NEWFILES" ] && (echo "Error: file \"new\" not found." && printhelp)
	NEWFILEWAV="$(ls -1|grep -i ^new|grep -i wav|head -n1)"
	NEWFILEMP3="$(ls -1|grep -i ^new|grep -i mp3|head -n1)"
	if [ -z "$NEWFILEWAV" ]
	then
		ffmpeg -i "$NEWFILE" new.wav
		BASE64NEWWAV="$(base64 new.wav|tr -d '\n')"
	else
		BASE64NEWWAV="$(base64 "$NEWFILEWAV"|tr -d '\n')"
	fi

	if [ -z "$NEWFILEMP3" ]
	then
		ffmpeg -i "$NEWFILE" new.mp3
		BASE64NEWMP3="$(base64 new.mp3|tr -d '\n')"
	else
		BASE64NEWMP3="$(base64 "$NEWFILEMP3"|tr -d '\n')"
	fi
}

function On {
	ONFILES="$(ls -1|grep -i ^on)"
	ONFILE="$(ls -1|grep -i ^on|head -n1)"
	[ -z "$ONFILES" ] && (echo "Error: file \"on\" not found." && printhelp)
	ONFILEWAV="$(ls -1|grep -i ^on|grep -i wav|head -n1)"
	ONFILEMP3="$(ls -1|grep -i ^on|grep -i mp3|head -n1)"
	if [ -z "$ONFILEWAV" ]
	then
		ffmpeg -i "$ONFILE" on.wav
		BASE64ONWAV="$(base64 on.wav|tr -d '\n')"
	else
		BASE64ONWAV="$(base64 "$ONFILEWAV"|tr -d '\n')"
	fi

	if [ -z "$ONFILEMP3" ]
	then
		ffmpeg -i "$ONFILE" on.mp3
		BASE64ONMP3="$(base64 on.mp3|tr -d '\n')"
	else
		BASE64ONMP3="$(base64 "$ONFILEMP3"|tr -d '\n')"
	fi
}

function CreateVKSND {
echo '{' > "$OUTPUTFILE"
echo "Name:'noname'," >> "$OUTPUTFILE"
echo "  On:'data:audio/wav;base64,""$BASE64ONWAV""'," >> "$OUTPUTFILE"
echo "  New:'data:audio/wav;base64,""$BASE64NEWWAV""'," >> "$OUTPUTFILE"
echo "  Msg:'data:audio/wav;base64,""$BASE64MSGWAV""'," >> "$OUTPUTFILE"
echo "  On_mp3:'data:audio/wav;base64,""$BASE64ONMP3""'," >> "$OUTPUTFILE"
echo "  New_mp3:'data:audio/wav;base64,""$BASE64NEWMP3""'," >> "$OUTPUTFILE"
echo "  Msg_mp3:'data:audio/wav;base64,""$BASE64MSGMP3""'" >> "$OUTPUTFILE"
echo '}' >> "$OUTPUTFILE"
}

depcheck
argparse
argcheck
cd "$DIRPATH"
Msg
New
On
CreateVKSND
